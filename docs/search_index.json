[["index.html", "데이터 과학 언플러그드 데이터 과학 언플러그드 컴퓨터 과학 언플러그드", " 데이터 과학 언플러그드 한국 알(R) 사용자회 2022-05-22 데이터 과학 언플러그드 사단법인 한국 알(R) 사용자회는 디지털 불평등 해소와 통계 대중화를 위해 2022년 설립되었습니다. 오픈 통계 패키지(BitStat) 개발을 비롯하여 최근에 데이터 사이언스 관련 교재도 함께 제작하여 발간하는 작업을 수행하고 있습니다. 그 첫번째 결과물로 John Fox 교수님이 개발한 설치형 오픈 통계 패키지 Rcmdr(Fox 2016) (Fox and Bouchet-Valat 2021) (Fox 2005) 를 신종화 님께서 한글화 및 문서화에 10년 넘게 기여해주신 한국알사용자회 저작권을 흔쾌히 허락해 주셔서 설치형 오픈 통계 패키지 - Rcmdr로 세상에 나왔습니다. 두번째 활동을 여기저기 산재되어 있던 시각화 관련 자료를 묶어 데이터 시각화(Data Visualization)를 전자책 형태로 공개하였고, 데이터 분석 관련 저술을 이어 진행하게 되었습니다. 세번째 활동으로 데이터 사이언스가 하나로 구성되지 않은 것을 간파하고 데이터 사이언스를 지탱하는 기본기술을 5가지로 정리한 데이터 과학을 지탱하는 기본기 전자책을 공개했습니다. 네번째 활동으로 손으로 데이터 사이언스를 하는 분들은 없기 때문에 컴퓨터 프로그래밍 언어로 R을 채택하여 **데이터 사이언스 프로그래밍 전자책을 공개했습니다. 데이터 분석 언어 R에 관한 지식을 신속히 습득하여 독자들이 갖고 있는 문제에 접목시키고자 하시는 분은 한국 알(R) 사용자회에서 번역하여 공개한 R 신병훈련소(Bootcamp) 과정을 추천드립니다. “데이터 과학 언플러그드” 저작을 위해 Computer Science Unplugged 책의 크리에이티브 커먼스 라이선스를 준용하고 있으며 한국적인 상황을 최대한 반영하여 내용 및 삽화를 일부 수정하였습니다. 또한, 컴퓨터 과학 언플러그드 공유 및 협업을 위해 GitHub 저장소에 그동안 작업결과를 정리했습니다. 특히, 소프트웨어 카펜트리(Software Carpentry) 템플릿과 R bookdown 패키지를 사용한 것이 도움이 많이 되었다. Data Science Concept Maps - a remixable collection of teaching resources 크리에이티브 커먼스 라이선스를 활용했음을 밝혀둡니다. “데이터 과학 언플러그드” 저작물을 비롯한 한국 알(R) 사용자회 저작물은 크리에이티브 커먼즈 저작자표시-비영리-동일조건 변경 허락 (BY-NC-SA) 라이선스를 준용하고 있습니다. 관련 문의와 연락이 필요한 경우 한국 알(R) 사용자회 admin@r2bit.com 대표전자우편으로 연락주세요. 후원계좌 디지털 불평등 해소를 위해 제작중인 오픈 통계패키지 개발과 고품질 콘텐츠 제작에 큰 힘이 됩니다. 하나은행 448-910057-06204 사단법인 한국알사용자회 컴퓨터 과학 언플러그드 G-창업 프로젝트 경기중소기업종합지원센터 지원을 일부 받았고, 컴퓨터 과학 언플러그드 초기 한국어 번역 및 삽화 작업에 도움을 주신 분들은 다음과 같다. 한국어 프로젝트 참여자 및 원저작자 정보 한국어 번역: 이광춘 한국어 삽화: 문춘경 저자: Tim Bell, Ian H. Witten, Mike Fellows 실험수업: Robyn Adams and Jane McKenzie 삽화: Matt Powell 한글 데이터/컴퓨터 과학 언플러그드 버젼 2022년 05월 : 데이터 사이언스 언플러그드 신규 콘텐츠 2017년 10월 : 전자책 버젼 및 신규 콘텐츠 보강 2016년 1월 : EBS 링크, 소프트웨어 세상 제작 동영상 링크, 소프트웨어 세상 2015년 05월: 컴퓨터 과학 언플러그드 3.1 버젼 한글 번역 완료 HTML/PDF/E-PUB 무료 전자책 배포 인터넷에 대한 신규 활동 추가, 로고 변경 버젼 3.0에서 Part I, Part II로 양분되었던 교재(MS 워드)가 하나로 합쳐짐. 교육과정이 뉴질랜드 중심에서 글로벌 교육체계에 맞춰 변경. 한국어 언플러그드 교재를 PDF, E-PUB, HTML로 다양화하여 제공. 2015년 03월: 컴퓨터 과학 언플러그드 3.0 버젼 MS 워드 기반에서 마크다운 공개 소프트웨어 플랫폼 변환(GitHub) 2015년 02월: 컴퓨터 과학 언플러그드 3.0 버젼 삽화 한국화 작업 2015년 01월: 컴퓨터 과학 언플러그드 3.0 버젼 Part IV,V,VI 번역 (MS 워드) 2014년 08월: 컴퓨터 과학 언플러그드 3.0 버젼 Part I,II,III 번역 (MS 워드) 한국어 번역 우리나라의 산업발달과정을 보면 1950~1960년대 수입대체를 목표로 신발, 섬유가 중심이 된 경공업시대, 1970~1980년 수출진흥을 목표로 철강, 조선, 자동차가 중심이 된 중공업시대, 1990~2000년대 기술혁신을 통한 반도체, 핸드폰, 디스플레이가 중심이 된 ICT 산업을 지나 2010~2020년대는 소프트웨어, 콘텐트, 과학기술이 중심이 되는 융합•지식 창조산업 시대로 발전해 갈 것으로 기대하고 있다. 첫 인터넷 웹 브라우저를 만든 마크 앤더슨은 소프트웨어가 세상을 먹고 있다(“Software is eating the world”)는 자극적인 표현으로 2011년 월스트리트 저널에 에세이를 썼고, 카네기멜론 대학의 쟈넷 윙 교수는 이론적 사고(Theoretical Thinking), 실험적 사고(Experimental Thinking))와 더불어 정보적 사고(Computational Thinking)가 현재도 그렇지만 앞으로 인간의 사고를 지배하는 중추적인 역할을 할 것을 주장했다. 이들의 결과는 정보적 사고를 배운 사람과 소프트웨어를 이해하고 활용하는 사람과 그렇지 못한 사람과의 차이는 산업경제의 빈부격차보다 더 큰 디지털 경제의 정보 불평등(Digital Divide)를 야기할 것으로 예측했다. 정부는 ’14년 7월 세계 경제, 사회 환경이 소프트웨어 중심사회로 급격히 변화하고 있으며, 소프트웨어가 혁신과 성장, 가치창출의 중심이 되고, 개인•기업•국가의 경쟁력을 좌우하는 중요한 역할을 하고 있음에도 불구하고, 우리나라는 범정부적, 국민적 관심이 미흡한 상황이라고 진단하고, 미국, 영국, 이스라엘 등 선진국과 마찬가지로, 초•중•고에서 소프트웨어를 필수로 이수할 수 있는 방안을 강구하고 있다. 하지만, 지금까지 소프트웨어가 고등교육과 직업 교육에 초점이 맞추어줘서 초•중•고 및 소프트웨어에 관심을 가지고 있는 일반인이 접근하기에는 높은 장벽이 있었으나, ’컴퓨터 과학 언플러그드 (Computer Science Unplugged)’를 통해서 소프트웨어를 처음 접하거나, 원리를 이해하고자 하는 분들에게는 큰 도움이 되고 특히, 컴퓨터적 사고 (Computational Thinking)에 대한 입문으로적 적합할 것으로 생각된다. 컴퓨터 과학 언플러그드는 정보 불평등 해소하고, 대한민국 전 국민을 단돈 천원($1) 정보교육으로 행복한 세상 만들기 위한 정보 소프트웨어 교육 xwMOOC 프로젝트 중의 하나이며, 정보교육을 위한 파이썬, 소프트웨어 카펜트리 등 다양한 프로젝트가 진행중이다. 많은 분들이 번역 및 감수에 참여하여 빠른 시간 내에 번역이 완료될 수 있었으며, 문춘경, 김이정님이 삽화와 그래픽 디자인에 도움을 주셨고, 위키 플랫폼 구축과 xwMOOC 클라우드 서비스를 운영해 주고 계신 한정수님, 그리고 프로젝트를 지원해주신 강환범님과 문용규 사장님께 특별한 감사를 드립니다. 이광춘 / 경기도 과천 / ’14년 12월 감사의 말씀 많은 어린이와 선생님 모두가 아이디어를 개선하도록 도움을 주셨습니다. 캐나다 브리티쉬 콜롬비아 빅토리아 사우스 파크 소재의 셜리 초등학교(Shirley Primary School), 이람 초등학교(Ilam Primary School), 뉴질랜드 크리스트 처치 웨스트번(Westburn Primary School)초등학교 선생님과 아이들이 초기 실험적 활동에 참여해 주셨습니다. 학습활동에 환대해 주셨으며, 여러 활동이 건설적으로 될 수 있도록 아낌없는 조언을 주신 Linda Picciotto, Karen Able, Bryon Porteous, Paul Cathro, Tracy Harrold, Simone Tanoa, Lorraine Woodfield, Lynn Atkinson 분께 특별한 감사의 말씀을 전한다. Gwenda Bensemann는 우리를 위해서 몇몇 활동을 시범적으로 수행해 주셨고, 변경 점에 대해서 조언을 주셨습니다. Richard Lynders, Sumant Murugesh 두 분은 학습활동을 도와주셨습니다. 일부 암호학 활동에서는 Ken Noblitz분이 도움을 주셨습니다. Kathy Beveridge 도움으로 Victoria “Mathmania”그룹활동 아래 몇몇 활동은 이루어졌습니다. 초기 삽화는 Malcolm Robinson, Gail Williams 도움을 주셨고, Hans Knutson으로부터의 조언도 도움이 되었습니다. Matt Powell도 언플러그드 프로젝트가 발전되는 동안 값진 도움을 주셨습니다. 이 책이 발전되는 초기단계 아낌없는 후원을 해주신 Brian Mason Scientific and Technical Trust에 무척 감사 드립니다. 도움이 되는 제안을 많이 해주시고 활동을 시범적으로 진행해 주신 Paul, Ruth Ellen Howard에 특별한 감사를 드립니다. Peter Henderson, Bruce McKenzie, Joan Mitchell, Nancy Walker-Mitchell, Gwen Stark, Tony Smith, Tim A. H. Bell , Mike Hallett, Harold Thimbleby는 많은 유용한 코멘트를 주셨습니다. 이 책이 있게 지원해준 가족 Bruce, Fran, Grant, Judith, Pam에게 많은 빚을 지고 있고, Andrew, Anna, Hannah, Max, Michael, Nikki는 이번 작업에 영감을 주었고 시범활동을 수행한 첫 아이들입니다. 언플러그드 프로젝트를 후원해고 자유롭게 다운로드될 수 있는 이 책을 만들게 해준 구글에 특별한 감사를 전합니다. 언플러그드 활동에 대해서 조언과 코멘트를 언제나 환영합니다. 저자들은 csunplugged.org를 통해서 만날 수 있습니다. 참고문헌 "],["data-structure.html", "원재료", " 원재료 정보를 나타내는 원재료 — 데이터 점의 개수를 세다—이진수 숫자로 색깔 표현하기—이미지 표현 다시 말할 수 있어요!—텍스트 압축 카드 뒤집기 마술—오류 탐지 및 수정 질문 20개—정보 이론 데이터: 정보를 나타내는 원재료 컴퓨터로 정보를 어떻게 저장할까요? 컴퓨터(Computer)라는 말은 라틴어 'computare'에 기원하는데 계산하고 더한다는 의미를 지니지만, 오늘날 컴퓨터는 거대한 계산기 이상이다. 컴퓨터는 도서관도 될 수 있으며, 컴퓨터로 글을 작성할 수 있으며, 정보를 찾고, 음악을 연주하고, 영화를 보기도 한다. 그런데 컴퓨터는 이렇게 많은 모든 정보를 어떻게 저장할까? 믿든 믿지 않든, 컴퓨터는 단지 두 가지만을 사용한다. 영('0')과 일('1')이다. 데이터와 정보의 차이는 무얼까? 데이터는 원재료, 즉 컴퓨터가 작업하는 숫자다. 컴퓨터는 여러분과 내가 이해할 수 있는 데이터를 정보(문자, 숫자, 그림)로 변환한다. 숫자, 글자, 단어, 그림이 어떻게 영('0')과 일('1')로 변환될까? 제 1부에서는 이진수(binary number)가 무엇인지, 컴퓨터가 어떻게 그림을 그리는지, 팩시밀리 송수신기가 어떻게 동작하고, 대량의 정보를 저장하는 효율적인 방법이 무엇인지, 오류가 생기는 것을 어떻게 막을 수 있는지, 그리고 저장하려는 정보의 양을 어떻게 측정되는지를 배울 것이다. "],["binary-number.html", "1 . 카드 점의 개수를 세다 - 이진수 1.1 활동 1: 카드 점의 개수를 세다 1.2 언플러그드 동영상 1.3 이진수 1.4 활동: 이진수 1.5 복사 마스터: 이진수 1.6 활동: 비밀 메시지 보내기 1.7 활동: 전자우편과 모뎀 1.8 활동: 31보다 큰 수 세기 1.9 활동: 이진수 더 알아보기 1.10 컴퓨터 과학 핵심 개념 1.11 해답과 힌트", " 1 . 카드 점의 개수를 세다 - 이진수 1.1 활동 1: 카드 점의 개수를 세다 개요 컴퓨터의 데이터는 일련의 영과 일로 저장되고 전송된다. 단지 이 두 표식을 통해서 어떻게 언어와 숫자를 표현할 수 있을까? 교과학습 연계 수학: 숫자를 다른 진법으로 살펴보기. 이진법으로 숫자를 표현하기. 수학: 순열 패턴, 순열 패턴 규칙 기술하기. 이진법 패턴과 연관성 기술 계수 (Counting) 매칭 (Matching) 순서화 (Sequencing) 나이 7세 이상 학습 교재 이진 카드 5개가 데모용으로 필요합니다. 특히, A4 크기의 웃는 얼굴의 점 스티커 카드가 좋습니다. 아이마다 필요한 것 카드 5벌. 마스터 복사본: 카드에 이진수 표시된 자른 것 워크시트 학습: 이진수 필요에 따라 추가학습에 아이마다 필요한 것 워크시트 활동: 이진수 작업하기 워크시트 활동: 비밀 메시지 보내기 워크시트 활동: 팩스 기계와 모뎀 워크시트 활동: 31보다 큰 수 세기 워크시트 활동: 이진수 심화 1.2 언플러그드 동영상 영어 한국어 1.3 이진수 1.3.1 들어가며 워크쉬트를 나눠주기 전에, 전체 그룹에게 기본원리에 대해서 시범을 보여주는 것이 도움이 된다. 본 활동에서 아래와 같은 5장 카드 한 세트가 필요하다. 각각의 카드는 한 면에는 점을 반대면에는 아무것도 없다. 5명의 아이들을 골라서, 교실 앞으로 시범 카드를 나눠준다. 카드의 순서는 반듯이 다음과 같다. 카드 다섯장 1.3.2 토론 카드 위에 점(dot)의 개수에서 무엇을 알아챘나요? (카드 각각은 오른쪽에 있는 카드보다 점의 개수가 2배 많다.) 왼쪽으로 옮긴다면 다음 장의 카드는 점을 몇 개나 가질까요? (32) 그 다음은…… ? 카드를 몇장 뒤집고 앞면만 보이는 카드의 점을 더해서 숫자를 만들 수 있다. 아이들에게 숫자 6을 만들어 보도록 해보세요. (점 4개 카드와 점 2개 카드), 그리고 15를 만들고 (8점, 4점, 2점, 1점 카드), 그리고 21을 만들어 봅시다 (16점, 4점, 1점 &gt; 카드). 이제 영에서부터 순서대로 수를 세어보자. 수업의 나머지 시간은 어떻게 카드가 변화하는지 자세히 살펴볼 필요가 있다. 카드를 뒤집는 방법에 패턴을 볼 수 있다. (각 카드를 뒤집으면 오른쪽 대비 절반이다.) 본 활동을 한 개 이상 그룹에서 확대해보자. 이진수 카드가 보이지 않을 때는 0 으로 표시한다. 이진수 카드가 보이면, 1 로 표시한다. 이것이 이진수 체계다. 카드 5장 확인 01001을 아이들에게 만들어 보게 한다. 01001은 십진수로 무엇일까요?(9) 17은 이진수로 무엇일가요? (10001) 아이들이 개념을 이해할 때까지 몇 번 더 시도해 본다. 학습 강화를 위해 다섯 가지 선택가능한 확장 활동이 있고, 아이들이 할 수 있으면 확장 활동을 가지고 많이 연습할 수 있게 합니다. ::: {#binary-number-cards-worksheet .rmdnote} 1.4 활동: 이진수 계수(counting)하는 방법 배우기 여러분은 어떻게 계수 하는지 이제 안다고 생각합니다. 그런데 다음에 계수하는 새로운 방법이 있다. 컴퓨터가 단지 0 과 1 만을 사용한다는 사실을 알고 있습니까? 컴퓨터에서 보고 듣는 모든 것, 글, 그림, 숫자, 영화, 소리 조차도 단지 숫자 두개로 저장된다. 컴퓨터가 사용하는 정확히 동일한 방법으로 이번 활동을 통해서 비밀 메시지를 친구에게 보내는지를 여러분에게 알려줄 것이다. 따라하기 설명 종이에서 카드를 잘라내서 다음에 보여지듯이 왼쪽에 점 16개가 있는 카드부터 순서대로 차례로 놓으세요. 카드가 정확하게 동일한 순서로 놓여있는지를 확인하세요. 정확하게 점 5개가 보여지도록 카드를 뒤집으세요. 카드는 동일한 순서로 놓여져야 합니다. 3, 12, 19를 어떻게 만드는지 알아보자. 이들 숫자를 만들기 위한 하나 이상의 방법이 있을까요? 만들 수 있는 가장 큰 수는 무얼까요? 가장 작은 숫자는 무엇일까요? 가장 큰 수와 가장 작은 수 중에 만들 수 없는 숫자가 있나요? 응용문제: 1,2,3,4 숫자를 순서대로 만드세요. 숫자를 하나씩 증가시키기 위해 카드를 뒤집는 논리적인 믿을만한 방법을 찾을 수 있나요? 1.5 복사 마스터: 이진수 학습교구: 이진수 출력지 워크시트 활동: 이진수 계산 이진수 체계는 카드가 앞면인지 뒷면인지를 표현하는데 0과 1을 사용한다. 0은 카드 뒷면, 1은 점을 볼 수 있는 윗면이다. 예를 들어, 학습교구: 이진수 출력지 10101 이 무엇인지 풀 수 있나요? 11111 은 무엇일까요? 몇월 몇일 태어났나요? 이진수로 적어보세요. 친구 생일을 이진수로 무엇인지 알아보세요. 아래 기호를 숫자로 풀어보세요: 응용문제: 1,2,4,8,16 길이를 가진 줄(rope) 세트를 사용하여 31 단위까지 어떤 길이도 나타낼 수 있다는 것을 보여주세요. 서류가방이나 상자 같은 무거운 물건의 무게를 재기 위해서 균형저울과 무게추 몇개를 가지고 어떻게 무게를 잴 수 있는지 보이고 어른들을 놀래주세요. 1.6 활동: 비밀 메시지 보내기 정훈이가 땡돌 땡돌 놀다가 그만 백화점 최고층에 갇혔다. 크리스마스 전날이고 선물을 가지고 무사히 집에 가고 싶었다. 정훈이는 무엇을 할 수 있을까? 전화도 시도해보고, 소리도 질러봤으나 주변에는 아무도 없었다. 길거리 반대편에 어떤 사람이 밤 늦도록 컴퓨터로 작업하고 있는 것을 봤다. 어떻게 그 사람의 관심을 끌 수 있을까? 정훈이는 주위를 둘러보고 할 수 있는 것을 찾아봤다. 그리고, 놀라운 아이디어가 떠올랐다—그녀에게 메시지를 보내기 위해서 크리스마스 트리의 전구를 사용하는 것이다. 주변의 전구를 모두 찾아 연결해서 전구를 켜거나 끌 수 있었다. 간단한 이진코드를 사용하는데 길 건너 여성분이 이진수를 이해한다고 확신했기 때문이다. 여러분도 할 수 있겠습니까? 비밀 메시지 보내기 1.7 활동: 전자우편과 모뎀 모뎀으로 인터넷에 연결된 컴퓨터는 메시지를 보내기 위해서 이진수 체계를 사용합니다. 유일한 차이점은 비프음(beep)을 사용하는 것이다. 높은 비프음은 1, 낮은 비프음은 0이다. 이런 음조(tone)는 엄청 빨리 날아간다. 너무나 빨라서 우리가 듣게 되는 것은 끔찍하게 연속된 끼익 소리다. 만약 들은 적이 없다면, 인터넷에 연결된 모뎀소리에 귀 기울여 들어보세요. 혹은 팩시밀리의 신호음을 들어보세요—정보를 보내기 위해서 팩시밀리 기계도 모뎀을 사용합니다. 전자우편(E-mail)과 모뎀(Modem) 1 정훈이가 백화점에서 사용한 동일 신호를 사용해서, 친구에게 전자우편을 보내보세요. 친구와 여러분 모두 편안하게 해보세요—여러분이 모뎀처럼 빠를 필요는 없어요. 전자우편(E-mail)과 모뎀(Modem) 2 1.8 활동: 31보다 큰 수 세기 이진 카드를 다시 보세요. 다음 카드를 나열된 순서(sequence)에서 만들려면, 얼마나 많은 점이 필요할까요? 그 다음 카드는 얼마나 많은 점이 필요할까요? 새로운 카드를 만들 때마다 여러분이 지켜야 하는 규칙은 무엇일까요? 보시다시피, 다음 큰 숫자를 만들기 위해서 단지 몇 장의 카드만 필요합니다. 주의 깊이 순서(sequence)를 살펴보면, 매우 흥미로운 관계를 발견하실 수 있습니다. 1, 2, 4, 8, 16, … 1, 2, 4를 더하면 1 + 2 + 4 = ? 얼마일까요? 1, 2, 4, 8을 더하면 1 + 2 + 4 + 8 = ? 처음부터 이들 숫자를 다 더하면 무슨 일이 생길까요? “손가락을 걷게 한다”(let your fingers do the walking?)는 표현을 들어봤나요? 손가락으로 계수를 하지만 10이상 셀 수는 없어요— 외계인이 될 필요는 없어요. 이진수 체계를 사용하고 손가락 각자가 카드를 나타낸다면 0에서 31가지 셀 수 있어요. 즉 32개 숫자가 됩니다. (0도 숫자라는 것을 잊지 마세요.) 손가락을 사용해서 순서대로 수를 세보세요. 손가락을 치켜 세우면, 1을 나타내고, 손가락을 내리면 0을 나타냅니다. 만약 양쪽 손 모두 사용하면 0 ~ 1023까지 셀 수 있어요. 즉, 1024개의 숫자입니다. 여러분이 만약 잘 구부릴 수 있는 발가락을 가지고 있으면(이번에는 외계인이 되셔야 합니다.^^;) 더 많은 숫자를 셀 수 있어요. 한쪽 손이 32까지 셀 수 있고, 두 손으로 \\(32 \\times 32 = 1,024\\)까지 셀 수 있어요. 플렉시양(Miss Flexi)의 발가락으로는 얼마나 큰 수를 셀 수 있나요? 전자우편(E-mail)과 모뎀(Modem) 3 1.9 활동: 이진수 더 알아보기 이진수의 또 다른 흥미로운 특성은 0이 오른쪽 끝에 붙게 될 때 생긴다. 십진수의 경우, 0을 오른쪽 끝에 붙이게 되면 10을 곱한 결과가 된다. 예를 들어 9에 0을 붙이면 90이 되고, 30은 300이 된다. 하지만, 이진수의 오른쪽 끝에 0을 붙이면 무슨 일이 벌어질까? 다음을 시도해 보세요. 이진수 더 알아보기 가설을 검증하기 위해 다른 것도 만들어 시도해 보세요. 무슨 규칙이 있을까요? 왜 이렇게 될까요? 지금까지 우리가 사용한 각 카드는 컴퓨터의 비트(bit)를 나타냅니다. (‘bit’는’binary digit’의 약자입니다.) 그래서 지금까지 여러분이 사용한 알파벳 &gt; 기호는 단지 5개의 카드, 즉 비트를 사용해서 나타냈습니다. 하지만, 컴퓨터는 문자가 대문자인지 소문자인지를 알아야 하고 또한 자릿수, 구두점, $, ~ 같은 특수문자를 인지해야 합니다. 직접 눈으로 키보드를 살펴보고 컴퓨터가 얼마나 많은 문자를 표현해야 하는지를 살펴보세요. 모든 문자를 저장하기 위해서 컴퓨터는 얼마나 많은 비트를 필요로 할까요? 대부분의 컴퓨터는 아스키(ASCII, American Standard Code for Information Interchange, 정보교환 미국 표준 코드체계) 코드를 사용합니다. 아스키는 문자마다 별도의 비트를 사용하는 것을 기준으로 하고 있지만 비영어권 국가에서는 더 많은 코드를 사용합니다. 이진수 더 알아보기 1.10 컴퓨터 과학 핵심 개념 오늘날 컴퓨터는 정보를 표현하기 위해서 이진수 체계를 사용합니다. 단지 숫자가 두개만 사용되기 때문에 이진수 체계라고 불립니다. 사람은 일반적으로 십진법(base 10)을 사용한데 반해 이진법(base 2)으로 알려져 있습니다. 0 과 1 각각은 비트(bit, binary digit)로 불립니다. 비트는 컴퓨터 주기억장치에 스위치가 온오프 상태의 트랜지스터나 충방전된 캐패시터로 표현됩니다. 핵심개념 1 전화선이나 무선 라디오를 통해서 데이터가 전송될 때, 고음과 저음 음조(tone)가 1과 0을 표현하기 위해서 사용됩니다. 자기 디스크(하드디스크나 플로피 디스크)나 테이프에서는 비트가 코팅된 표면에 자기력장 방향(북-남, 남-북)으로 표현됩니다. 핵심 개념 2 오디오 CD, CD-ROM, DVD는 광학적으로 비트를 저장합니다. 비트 정보를 저장하는 표면은 빛을 반사하거나 하지 않습니다. 핵심 개념 3 한 비트 자체는 많은 정보를 담을 수 없어 0 ~ 255까지 숫자를 표현할 수 있는 8개를 그룹으로 묶습니다. 비트 8개를 그룹으로 묶어 바이트(byte)라고 합니다. 컴퓨터 속도는 한번에 처리하는 비트의 숫자에 달려있다. 예를 들어, 32비트 컴퓨터는 한번의 연산으로 32비트의 숫자를 처리할 수 있고 16비트 컴퓨터는 32비트 숫자를 작은 조각으로 쪼개서 처리하게 되어 속도가 느리다. 궁극적으로 비트와 바이트는 컴퓨터가 숫자, 텍스트, 다른 종류의 정보를 저장하고 전송하기 위해서 사용하는 것이다. 앞으로 몇몇 활동에서 다른 종류의 정보를 어떻게 &gt; 컴퓨터에서 표현되는지 학습하게 될 것입니다. 핵심개념 4 1.11 해답과 힌트 1.11.1 이진수 3 은 카드 2, 1 12 는 카드 8, 4 19 는 카드 16, 2, 1 어떤 숫자를 만들기 위해서 단 하나의 방법만 있다. 만들 수 있는 가장 큰 수는 31. 가장 작은 숫자는 0. 그 사이 모든 숫자를 만들 수 있고, 각 숫자를 표현하는 방법은 유일하다. 응용문제: 하나씩 숫자를 증가시키려면, 모든 카드가 윗면이 될 때까지 오른쪽부터 왼쪽까지 모든 카드를 뒤집는 것이다. 1.11.2 이진수 계산 10101 = 21, 11111 = 31 1.11.3 비밀 메시지 보내기 해독된 메시지: HELP IM TRAPPED 1.11.4 31보다 큰 수 세기 처음부터 숫자를 더한다면, 합계는 항상 급수열의 다음 숫자보다 1 이 작은 수가 된다. 플레시 양의 발가락은 1024 × 1024 = 1,048,576, 즉 0 부터 1,048,575 까지 1.11.5 이진수 더 알아보기 오른쪽 끝에 0을 놓게 되면, 숫자는 항상 배수가 된다. 1을 포함하는 모든 장소는 이전 값의 배수가 된다. 그래서 총수는 배수가 된다. (10진수의 경우 0을 오른쪽 끝에 놓게 되면 10을 곱한 결과가 된다.) 컴퓨터는 모든 문자를 저장하기 위해서 7 비트가 필요하다. 128 문자까지 가능하다. 일반적으로 1 바이트 8비트에 7 비트가 저장되고 1 비트는 버려진다. "],["참고문헌.html", "참고문헌", " 참고문헌 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
